/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;
import java.io.File;
import java.io.FileInputStream;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;

public class App {
    public String getGreeting() {
            return "Hello World!";
            }
    public static void readXMLFile(File file, boolean[] selectedFields) {
        
        try {
            if (!file.exists()) {
                System.err.println("Error: The specified file does not exist.");
                return;
            }

            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document document = builder.parse(new FileInputStream(file));
            document.getDocumentElement().normalize();

            ObjectMapper objectMapper = new ObjectMapper();
            ObjectNode rootNode = objectMapper.createObjectNode();

            NodeList nodeList = document.getElementsByTagName("record");

            for (int temp = 0; temp < nodeList.getLength(); temp++) {
                Element element = (Element) nodeList.item(temp);
                ObjectNode recordNode = objectMapper.createObjectNode();

                if (selectedFields[0]) recordNode.put("name", element.getElementsByTagName("name").item(0).getTextContent());
                if (selectedFields[1]) recordNode.put("postalZip", element.getElementsByTagName("postalZip").item(0).getTextContent());
                if (selectedFields[2]) recordNode.put("region", element.getElementsByTagName("region").item(0).getTextContent());
                if (selectedFields[3]) recordNode.put("country", element.getElementsByTagName("country").item(0).getTextContent());
                if (selectedFields[4]) recordNode.put("address", element.getElementsByTagName("address").item(0).getTextContent());

                rootNode.set("record" + (temp + 1), recordNode);
            }

            String jsonOutput = objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(rootNode);
            System.out.println(jsonOutput);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        File file = new File("data.xml");
        boolean[] selectedFields = {true, true, true, true, true}; // Select all fields to display
        readXMLFile(file, selectedFields);
    }
}
